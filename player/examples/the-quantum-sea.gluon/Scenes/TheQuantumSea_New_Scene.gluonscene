{ GluonEngine::GameObject(PlayingField)
    enabled bool(true)
    position vector3d(0;0;0)
    scale vector3d(1;1;1)
    orientation quaternion(0;0;0;1)
    { GluonEngine::GameObject(Camera)
        enabled bool(true)
        position vector3d(0;0;50)
        scale vector3d(1;1;1)
        orientation quaternion(0;0;0;1)
        { GluonEngine::CameraControllerComponent(GluonObject)
            enabled bool(true)
            active bool(true)
            visibleArea size2d(300;300)
            nearPlane float(1)
            farPlane float(99.99)
        }
        { GluonEngine::QtScriptComponent(PlaybackControl)
            enabled bool(true)
            script GluonEngine::Asset(TheQuantumSea/music-player.js)
        }
        { GluonEngine::SoundListenerComponent(SoundListener)
            enabled bool(true)
            active bool(true)
            effectsEnabled bool(true)
        }
        { GluonEngine::SoundEmitterComponent(bridge2)
            enabled bool(true)
            sound GluonEngine::Asset(TheQuantumSea/bridge-2.ogg)
            radius float(99.99)
            loop bool(false)
            autoPlay bool(false)
        }
        { GluonEngine::SoundEmitterComponent(couplet411)
            enabled bool(true)
            sound GluonEngine::Asset(TheQuantumSea/couplet-411.ogg)
            radius float(99.99)
            loop bool(false)
            autoPlay bool(false)
        }
        { GluonEngine::SoundEmitterComponent(couplet412)
            enabled bool(true)
            sound GluonEngine::Asset(TheQuantumSea/couplet-412.ogg)
            radius float(99.99)
            loop bool(false)
            autoPlay bool(false)
        }
        { GluonEngine::SoundEmitterComponent(couplet42)
            enabled bool(true)
            sound GluonEngine::Asset(TheQuantumSea/couplet-42.ogg)
            radius float(99.99)
            loop bool(false)
            autoPlay bool(false)
        }
        { GluonEngine::SoundEmitterComponent(couplet42break)
            enabled bool(true)
            sound GluonEngine::Asset(TheQuantumSea/couplet-42-break.ogg)
            radius float(99.99)
            loop bool(false)
            autoPlay bool(false)
        }
        { GluonEngine::SoundEmitterComponent(refrain4)
            enabled bool(true)
            sound GluonEngine::Asset(TheQuantumSea/refrain-4.ogg)
            radius float(99.99)
            loop bool(false)
            autoPlay bool(false)
        }
    }
    { GluonEngine::GameObject(MasterControl)
        enabled bool(true)
        position vector3d(0;0;0)
        scale vector3d(1;1;1)
        orientation quaternion(0;0;0;1)
        { GluonEngine::QtScriptComponent(PlayerManager)
            enabled bool(true)
            script GluonEngine::Asset(TheQuantumSea/player-manager.js)
            availableEnergy float(99.99)
            energyDrainPerSecond float(25)
            energyRegainedPerSecond float(5)
            perceptionSpeed float(50)
            maxEnergy float(99.99)
            context float(1)
        }
        { GluonEngine::QtScriptComponent(PlayerControls)
            enabled bool(true)
            script GluonEngine::Asset(TheQuantumSea/player-controls.js)
        }
        { GluonEngine::KeyboardInputComponent(SwitchContextControl)
            enabled bool(true)
            keyCode int(57)
            expanded bool(false)
        }
        { GluonEngine::KeyboardInputComponent(UseEnergyControl)
            enabled bool(true)
            keyCode int(31)
            expanded bool(false)
        }
        { GluonEngine::KeyboardInputComponent(LeftControl)
            enabled bool(true)
            keyCode int(30)
            expanded bool(false)
        }
        { GluonEngine::KeyboardInputComponent(RightControl)
            enabled bool(true)
            keyCode int(32)
            expanded bool(false)
        }
        { GluonEngine::Character(Character)
            enabled bool(true)
            autoThink bool(true)
	    tree GluonEngine::Tree(TheQuantumSea/playerglbt/Root)
        }
    }
    { GluonEngine::GameObject(Berylium-10)
        enabled bool(true)
        position vector3d(-20;0;0)
        scale vector3d(1;1;1)
        orientation quaternion(0;0;0;1)
        expanded bool(true)
        { GluonEngine::SphereCollisionComponent(SphereCollider)
            enabled bool(true)
            radius float(6)
            expanded bool(false)
        }
        { GluonEngine::DiscRendererComponent(Triangle)
            enabled bool(true)
            radius float(3)
            nbPoints uint(3)
            color rgba(255;255;255;255)
            expanded bool(false)
        }
        { GluonEngine::SpriteRendererComponent(Glow)
            enabled bool(true)
            size size2d(14;14)
            color rgba(0;128;255;255)
            texture GluonEngine::Asset(TheQuantumSea/glow.png)
            expanded bool(false)
        }
        { GluonEngine::SpriteRendererComponent(Atom)
            enabled bool(true)
            size size2d(14;14)
            color rgba(0;128;255;255)
            texture GluonEngine::Asset(TheQuantumSea/atom.png)
            expanded bool(false)
        }
        { GluonEngine::SpriteRendererComponent(Shadow)
            enabled bool(true)
            size size2d(14;14)
            color rgba(0;128;255;255)
            texture GluonEngine::Asset(TheQuantumSea/shade.png)
            expanded bool(false)
        }
        { GluonEngine::QtScriptComponent(ParticleMotion)
            enabled bool(true)
            script GluonEngine::Asset(TheQuantumSea/particle-motion.js)
            reductionPerSecond float(0.1)
            speedIncreasePerEnergyPoint float(0.3)
            expanded bool(false)
        }
	{ GluonEngine::QtScriptComponent(ParticleInfo)
            enabled bool(true)
            script GluonEngine::Asset(TheQuantumSea/particle-info.js)
        }
        { GluonEngine::PerceptionInfo(SpeedInfo)
            enabled bool(true)
            position vector3d(0;0;0)
	    script GluonEngine::Asset(TheQuantumSea/perceptioninfo-speed.js)
        }
	{ GluonEngine::PerceptionInfo(SpinInfo)
            enabled bool(true)
            position vector3d(0;0;0)
	    script GluonEngine::Asset(TheQuantumSea/perceptioninfo-spin.js)
        }
	{ GluonEngine::PerceptionInfo(PositionInfo)
            enabled bool(true)
            position vector3d(0;0;0)
	    script GluonEngine::Asset(TheQuantumSea/perceptioninfo-position.js)
        }
	{ GluonEngine::PerceptionInfo(VelocityInfo)
            enabled bool(true)
            position vector3d(0;0;0)
	    script GluonEngine::Asset(TheQuantumSea/perceptioninfo-velocity.js)
        }
    }
    { GluonEngine::GameObject(Nitrogen-14)
        enabled bool(true)
        position vector3d(20;0;0)
        scale vector3d(1;1;1)
        orientation quaternion(0;0;0;0)
        { GluonEngine::SphereCollisionComponent(SphereCollider)
            enabled bool(true)
            radius float(6)
        }
        { GluonEngine::DiscRendererComponent(Triangle)
            enabled bool(true)
            radius float(3)
            nbPoints uint(3)
            color rgba(255;255;255;255)
        }
        { GluonEngine::SpriteRendererComponent(Glow)
            enabled bool(true)
            size size2d(14;14)
            color rgba(255;128;128;255)
            texture GluonEngine::Asset(TheQuantumSea/glow.png)
        }
        { GluonEngine::SpriteRendererComponent(Atom)
            enabled bool(true)
            size size2d(14;14)
            color rgba(255;128;128;255)
            texture GluonEngine::Asset(TheQuantumSea/atom.png)
        }
        { GluonEngine::SpriteRendererComponent(Shadow)
            enabled bool(true)
            size size2d(14;14)
            color rgba(255;128;128;255)
            texture GluonEngine::Asset(TheQuantumSea/shade.png)
        }
        { GluonEngine::QtScriptComponent(ParticleMotion)
            enabled bool(true)
            script GluonEngine::Asset(TheQuantumSea/particle-motion.js)
            reductionPerSecond float(0.1)
            speedIncreasePerEnergyPoint float(0.3)
        }
	{ GluonEngine::QtScriptComponent(ParticleInfo)
            enabled bool(true)
            script GluonEngine::Asset(TheQuantumSea/particle-info.js)
        }
        { GluonEngine::PerceptionInfo(SpeedInfo)
            enabled bool(true)
            position vector3d(0;0;0)
	    script GluonEngine::Asset(TheQuantumSea/perceptioninfo-speed.js)
        }
	{ GluonEngine::PerceptionInfo(SpinInfo)
            enabled bool(true)
            position vector3d(0;0;0)
	    script GluonEngine::Asset(TheQuantumSea/perceptioninfo-spin.js)
        }
	{ GluonEngine::PerceptionInfo(PositionInfo)
            enabled bool(true)
            position vector3d(0;0;0)
	    script GluonEngine::Asset(TheQuantumSea/perceptioninfo-position.js)
        }
	{ GluonEngine::PerceptionInfo(VelocityInfo)
            enabled bool(true)
            position vector3d(0;0;0)
	    script GluonEngine::Asset(TheQuantumSea/perceptioninfo-velocity.js)
        }
    }
    { GluonEngine::GameObject(LevelInfo)
        enabled bool(true)
        position vector3d(0;0;0)
        scale vector3d(1;1;1)
        orientation quaternion(0;0;0;1)
        expanded bool(false)
        { GluonEngine::QtScriptComponent(LevelInfo)
            enabled bool(true)
            script GluonEngine::Asset(TheQuantumSea/tqs-level.js)
            expanded bool(false)
        }
    }
    { GluonEngine::GameObject(EnergyText)
        enabled bool(true)
        position vector3d(-50;50;-1)
        scale vector3d(30;-3;1)
        orientation quaternion(0;0;0;1)
        { GluonEngine::TextRendererComponent(TextRenderer)
            enabled bool(true)
            text string(Some Text)
            font Sans Serif,10,-1,5,50,0,0,0,0,0
            color rgba(0;0;0;255)
        }
    }
    { GluonEngine::GameObject(ContextText)
        enabled bool(true)
        position vector3d(50;50;-1)
        scale vector3d(30;-3;1)
        orientation quaternion(0;0;0;1)
        { GluonEngine::TextRendererComponent(TextRenderer)
            enabled bool(true)
            text string(Some Text)
            font Sans Serif,10,-1,5,50,0,0,0,0,0
            color rgba(0;0;0;255)
        }
    }
    { GluonEngine::GameObject(PointsText)
        enabled bool(true)
        position vector3d(50;-50;-1)
        scale vector3d(30;-3;1)
        orientation quaternion(0;0;0;1)
        { GluonEngine::TextRendererComponent(TextRenderer)
            enabled bool(true)
            text string(Some Text)
            font Sans Serif,10,-1,5,50,0,0,0,0,0
            color rgba(0;0;0;255)
        }
    }
    { GluonEngine::GameObject(ParticleInfo)
        enabled bool(true)
        position vector3d(0;0;-1)
        scale vector3d(40;-3;1)
        orientation quaternion(0;0;0;1)
        expanded bool(false)
        { GluonEngine::TextRendererComponent(TextRenderer)
            enabled bool(true)
            text string(Something)
            font Sans Serif,10,-1,5,50,0,0,0,0,0
            color rgba(0;0;0;255)
            expanded bool(false)
        }
    }
    { GluonEngine::GameObject(Background)
        enabled bool(true)
        position vector3d(0;0;-2)
        scale vector3d(1;1;1)
        orientation quaternion(0;0;0;1)
        { GluonEngine::SpriteRendererComponent(Sprite Renderer Component)
            enabled bool(true)
            size size2d(2560;1600)
            color rgba(138;138;138;255)
            texture GluonEngine::Asset(TheQuantumSea/background.png)
        }
    }
    { GluonEngine::GameObject(GluonObject)
        enabled bool(true)
        position vector3d(0;0;0)
        scale vector3d(1;1;1)
        orientation quaternion(0;0;0;1)
    }
    { GluonEngine::GameObject(GluonObject 1)
        enabled bool(true)
        position vector3d(0;0;0)
        scale vector3d(1;1;1)
        orientation quaternion(0;0;0;1)
    }
}