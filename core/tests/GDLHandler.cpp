#include "TestGluonCore.h"

#include "../core/gdlhandler.h"

#include <cassert>
#include <cstddef>

using namespace GluonCore;

// TODO: Instead of using hardcoded strings, load all and run all this GDL at runtime.

void TestGluonCore::doxygenSample()
{
    const char* test =
        "{ GluonCore::GluonObject(AnotherObject)\n"
        "reference GluonCore::GluonObject(AnObject/AChildObject)\n"
        "}\n"
        "{ GluonCore::GluonObject(AnObject)\n"
        "{ GluonCore::GluonObject(AChildObject)\n"
        "}\n"
        "}"
    ;

    QVERIFY(ensure_reversible(test));
}

void TestGluonCore::invadersSample()
{
    const char* test =
        "{ GluonEngine::GameObject(Game)\n"
        "    enabled bool(true)\n"
        "    position vector3d(0;0;0)\n"
        "    scale vector3d(1;1;1)\n"
        "    orientation quaternion(0;0;0;1)\n"
        "    { GluonEngine::GameObject(Camera)\n"
        "        enabled bool(true)\n"
        "        position vector3d(0;0;50)\n"
        "        scale vector3d(1;1;1)\n"
        "        orientation quaternion(0;0;0;1)\n"
        "        { GluonEngine::CameraControllerComponent(GluonObject)\n"
        "            enabled bool(true)\n"
        "            active bool(true)\n"
        "            visibleArea size2d(90;90)\n"
        "            nearPlane float(1)\n"
        "            farPlane float(99.99)\n"
        "        }\n"
        "        { GluonEngine::SoundListenerComponent(GluonObject 1)\n"
        "            enabled bool(true)\n"
        "            active bool(true)\n"
        "            effectsEnabled bool(true)\n"
        "        }\n"
        "        { GluonEngine::SoundEmitterComponent(GluonObject 2)\n"
        "            enabled bool(true)\n"
        "            sound GluonEngine::Asset(Invaders/Assets/Sounds/Harmful or Fatal.ogg)\n"
        "            radius float(99.99)\n"
        "            volume float(1)\n"
        "            pitch float(1)\n"
        "            loop bool(true)\n"
        "            autoPlay bool(true)\n"
        "        }\n"
        "    }\n"
        "    { GluonEngine::GameObject(Background)\n"
        "        enabled bool(true)\n"
        "        position vector3d(0;0;0)\n"
        "        scale vector3d(1;1;1)\n"
        "        orientation quaternion(0;0;0;1)\n"
        "        { GluonEngine::SpriteRendererComponent(GluonObject)\n"
        "            enabled bool(true)\n"
        "            size size2d(90;90)\n"
        "            material GluonGraphics::MaterialInstance(Invaders/Assets/Material/Background)\n"
        "            color rgba(255;255;255;255)\n"
        "        }\n"
        "        { GluonEngine::QtScriptComponent(ControllerScript)\n"
        "            enabled bool(true)\n"
        "            script GluonEngine::Asset(Invaders/Assets/Scripts/controller.js)\n"
        "            paused bool(false)\n"
        "        }\n"
        "        { GluonEngine::KeyboardInputComponent(Continue)\n"
        "            enabled bool(true)\n"
        "            keyCode int(57)\n"
        "        }\n"
        "    }\n"
        "    { GluonEngine::GameObject(Player)\n"
        "        enabled bool(false)\n"
        "        position vector3d(100;0;1)\n"
        "        scale vector3d(1;1;1)\n"
        "        orientation quaternion(0;0;0;1)\n"
        "        { GluonEngine::SpriteRendererComponent(SpriteRenderer)\n"
        "            enabled bool(true)\n"
        "            size size2d(8;8)\n"
        "            material GluonGraphics::MaterialInstance(Invaders/Assets/Material/Player)\n"
        "            color rgba(255;255;255;255)\n"
        "        }\n"
        "        { GluonEngine::GameObject(Reflection)\n"
        "            enabled bool(true)\n"
        "            position vector3d(0;-12;0)\n"
        "            scale vector3d(1;1;1)\n"
        "            orientation quaternion(0;0;0;1)\n"
        "            { GluonEngine::SpriteRendererComponent(GluonObject)\n"
        "                enabled bool(true)\n"
        "                size size2d(8;8)\n"
        "                material GluonGraphics::MaterialInstance(Invaders/Assets/Material/Player Reflection)\n"
        "                color rgba(255;255;255;255)\n"
        "            }\n"
        "        }\n"
        "        { GluonEngine::QtScriptComponent(GluonObject 1)\n"
        "            enabled bool(true)\n"
        "            script GluonEngine::Asset(Invaders/Assets/Scripts/player.js)\n"
        "        }\n"
        "        { GluonEngine::KeyboardInputComponent(Key_Left)\n"
        "            enabled bool(true)\n"
        "            keyCode int(105)\n"
        "        }\n"
        "        { GluonEngine::KeyboardInputComponent(Key_Right)\n"
        "            enabled bool(true)\n"
        "            keyCode int(106)\n"
        "        }\n"
        "        { GluonEngine::KeyboardInputComponent(Key_Up)\n"
        "            enabled bool(true)\n"
        "            keyCode int(21)\n"
        "        }\n"
        "        { GluonEngine::KeyboardInputComponent(Key_Down)\n"
        "            enabled bool(true)\n"
        "            keyCode int(31)\n"
        "        }\n"
        "        { GluonEngine::KeyboardInputComponent(Key_Fire)\n"
        "            enabled bool(true)\n"
        "            keyCode int(57)\n"
        "        }\n"
        "        { GluonEngine::SoundEmitterComponent(FireSound)\n"
        "            enabled bool(true)\n"
        "            sound GluonEngine::Asset(Invaders/Assets/Sounds/laser-pew.ogg)\n"
        "            radius float(99.99)\n"
        "            volume float(1)\n"
        "            pitch float(1)\n"
        "            loop bool(false)\n"
        "            autoPlay bool(false)\n"
        "        }\n"
        "        { GluonEngine::SphereCollisionComponent(BulletCollider)\n"
        "            enabled bool(true)\n"
        "            collisionGroup int(2)\n"
        "            radius float(3)\n"
        "        }\n"
        "        { GluonEngine::SoundEmitterComponent(Kapow)\n"
        "            enabled bool(true)\n"
        "            sound GluonEngine::Asset(Invaders/Assets/Sounds/quiet-explosion.ogg)\n"
        "            radius float(99.99)\n"
        "            volume float(1)\n"
        "            pitch float(1)\n"
        "            loop bool(false)\n"
        "            autoPlay bool(false)\n"
        "        }\n"
        "        { GluonEngine::SphereCollisionComponent(EnemyCollider)\n"
        "            enabled bool(true)\n"
        "            radius float(3)\n"
        "        }\n"
        "    }\n"
        "    { GluonEngine::GameObject(Enemy)\n"
        "        enabled bool(false)\n"
        "        position vector3d(100;0;1)\n"
        "        scale vector3d(1;1;1)\n"
        "        orientation quaternion(0;0;0;1)\n"
        "        { GluonEngine::SpriteRendererComponent(SpriteRenderer)\n"
        "            enabled bool(true)\n"
        "            size size2d(5;5)\n"
        "            material GluonGraphics::MaterialInstance(Invaders/Assets/Material/Enemy)\n"
        "            color rgba(255;255;255;255)\n"
        "        }\n"
        "        { GluonEngine::QtScriptComponent(GluonObject 1)\n"
        "            enabled bool(true)\n"
        "            script GluonEngine::Asset(Invaders/Assets/Scripts/enemy.js)\n"
        "        }\n"
        "        { GluonEngine::SphereCollisionComponent(PlayerCollider)\n"
        "            enabled bool(true)\n"
        "            radius float(2)\n"
        "        }\n"
        "        { GluonEngine::SphereCollisionComponent(BulletCollider)\n"
        "            enabled bool(true)\n"
        "            collisionGroup int(1)\n"
        "            radius float(2)\n"
        "        }\n"
        "        { GluonEngine::SoundEmitterComponent(Kapow)\n"
        "            enabled bool(true)\n"
        "            sound GluonEngine::Asset(Invaders/Assets/Sounds/quiet-explosion.ogg)\n"
        "            radius float(99.99)\n"
        "            volume float(1)\n"
        "            pitch float(1)\n"
        "            loop bool(false)\n"
        "            autoPlay bool(false)\n"
        "        }\n"
        "    }\n"
        "    { GluonEngine::GameObject(Bullet)\n"
        "        enabled bool(false)\n"
        "        position vector3d(100;0;2)\n"
        "        scale vector3d(1;1;1)\n"
        "        orientation quaternion(0;0;0;1)\n"
        "        { GluonEngine::SpriteRendererComponent(GluonObject)\n"
        "            enabled bool(true)\n"
        "            size size2d(1;5)\n"
        "            material GluonGraphics::MaterialInstance(Invaders/Assets/Material/Bullet)\n"
        "            color rgba(255;0;0;255)\n"
        "        }\n"
        "        { GluonEngine::QtScriptComponent(Script)\n"
        "            enabled bool(true)\n"
        "            script GluonEngine::Asset(Invaders/Assets/Scripts/bullet.js)\n"
        "        }\n"
        "        { GluonEngine::SphereCollisionComponent(Collider)\n"
        "            enabled bool(true)\n"
        "            collisionGroup int(1)\n"
        "            radius float(2)\n"
        "        }\n"
        "        { GluonEngine::SoundEmitterComponent(Pew)\n"
        "            enabled bool(true)\n"
        "            sound GluonEngine::Asset(Invaders/Assets/Sounds/laser-pew.ogg)\n"
        "            radius float(99.99)\n"
        "            volume float(1)\n"
        "            pitch float(1)\n"
        "            loop bool(false)\n"
        "            autoPlay bool(true)\n"
        "        }\n"
        "    }\n"
        "    { GluonEngine::GameObject(GameOver)\n"
        "        enabled bool(true)\n"
        "        position vector3d(0;50;10)\n"
        "        scale vector3d(1;1;1)\n"
        "        orientation quaternion(0;0;0;1)\n"
        "        { GluonEngine::SpriteRendererComponent(GluonObject)\n"
        "            enabled bool(true)\n"
        "            size size2d(40;7)\n"
        "            material GluonGraphics::MaterialInstance(Invaders/Assets/Material/Game Over)\n"
        "            color rgba(255;255;255;255)\n"
        "        }\n"
        "    }\n"
        "    { GluonEngine::GameObject(GameWon)\n"
        "        enabled bool(true)\n"
        "        position vector3d(0;50;10)\n"
        "        scale vector3d(1;1;1)\n"
        "        orientation quaternion(0;0;0;1)\n"
        "        { GluonEngine::SpriteRendererComponent(GluonObject)\n"
        "            enabled bool(true)\n"
        "            size size2d(40;9)\n"
        "            material GluonGraphics::MaterialInstance(Invaders/Assets/Material/You Win)\n"
        "            color rgba(255;255;255;255)\n"
        "        }\n"
        "    }\n"
        "}";

    QVERIFY(ensure_reversible(test));
}

